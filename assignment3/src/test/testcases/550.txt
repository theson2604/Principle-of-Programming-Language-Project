a :auto = 2;
o : auto = {{1},{2}};
foo: function auto (inherit a: auto, b: auto) inherit main {
    x:integer = a + b;
    a = "abc";
    return 2;
}


bar: function string (a: integer, inherit d: auto) inherit test {
    //foo("ab", 2.4);
    arr1 : auto = {{3,2},{2,1}};
    return "done";
}

test: function integer () inherit bar {
    preventDefault();
    d: auto = 3;
    return a;
}

test2: function auto (i: auto) inherit bar{
    super(2, 3);
    writeFloat(2);
    
    do
    {
        while (false)
            for (o[0,0] = bar2(),o[0,0] > 1, o[0,1]+1)
                if (a == 2) return 3.1;
                else if (i % 2 == 0) return 2;
                else continue;
        break;
    }
    while(true);
    break;
    return 1.2;
    a = foo("ab",2);
   

}
bar2: function auto () {

    return 1;
}
main: function auto(){
    return;
}

b: array [2,1] of integer = {{2},{3}};
